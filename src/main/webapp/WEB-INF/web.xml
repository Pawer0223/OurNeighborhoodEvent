<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>


	<!--

	The definition of the Root Spring Container shared by all Servlets and Filters

	Context Loader Listner를 통해 applicationContext.xml를 읽어들이고,Application Context 컨테이너에 웹과 관련이 없는 객체들이 생성됨.
	ContextLoader 클래스에는 CONFIG_LOCATION_PARAM라는 상수가 정의되어 있는데, 기본 값으로 문자열 contextConfigLocation이 할당되어 있습니다.

	그래서 1단계에서 전역 파라미터 이름을 contextConfigLocation으로 작성한 것.
	그리고 contextConfigLocation는 사실, 설정 파일 경로( classpath*:config/spring/context-*.xml )를 의미함.

	https://victorydntmd.tistory.com/161

	-->
	
	<!-- 
	 contextConfigLocation의 name으로 설정된 xml파일들은 ContextLoaderListner클래스에 의해서  Root Application Context 컨테이너에
	 생성 된다. 여기는 웹과 관련이 없는 ( DAO와 같은 ) 객체들이 관리되는 영역이다 !! 
	 -->
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:config/spring/context-*.xml</param-value>
	</context-param>

	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>action</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/config/*-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class> org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	
	<!-- Spring Security Filter -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
 
    <filter-mapping>
          <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	
</web-app>
